consistent hashing
merge/insert interval

word ladder II

https://www.usenix.org/system/files/conference/nsdi13/nsdi13-final170_update.pdf

http://socialfixer.com/blog/2013/12/31/7-new-years-resolutions-i-wish-facebook-would-make/
http://www.quora.com/What-are-some-features-you-would-like-to-add-change-or-remove-on-Facebook-to-make-it-better
https://www.dropbox.com/s/5yigdfu0iceclyc/Design-FB.txt

design:
http://blog.csdn.net/sigh1988/article/details/9790337

roman to integer

typeahead search

sliding window:
http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/

http://www.mitbbs.com/article_t/JobHunting/32828119.html
solution is here: http://www.cs.toronto.edu/~robere/csc373h/files/A2-sol.pdf (line intersections (Redux))

ring buffer:
http://www.keithschwarz.com/interesting/code/ring-buffer/RingBuffer.java.html

http://www.quora.com/How-should-I-prepare-system-design-questions-for-Google-Facebook-Interview

non-overlap jobs:
http://www.mitbbs.com/article_t/JobHunting/32849429.html

1. 问了一些behavior的问题，比如简历里写的项目什么的，然后还问了最喜欢 facebook app的哪个功能，有什么可以改进的地方，怎么改进。还有为什么想去Facebook。这些问题我基本都已经准备过，所以应该都答得不错。

2. 这轮开始的时间完了5分钟，所以只面了40分钟，要求设计facebook iOS app的news feed，不需要考虑服务器端的情况，只需要说app端的实现方法。这个我之前稍微准备 了一些，可是从来没有面过系统设计题，实在不知道应该怎么说，而且不知道会被问得 多深入，所以基本上一直是很被动的跟着面试官的指示走。画了几个框框以后就开始被问各种细节，比如从服务器读数据的格式是什么，写一下json的example，界面和后台 怎么传输数据，等等。总体感觉这轮答得不好。回去后想了一下，感觉回答的方式有些问题。比如说实现一个功能有两种方法A和B，他问我用哪种方法，我就直接说我倾向于用A。这种答法很不好。应该先说清楚A和B各有什么优缺点，然后我选A是因为什么。这样的话就会让人感觉我对于A和B都了解的比较多。

3. 又问了一些最近的项目的问题。这些都是warm－up questions，所以都只需简短的回答。然后出了一个编程题：有两个一样的树A和B，每个节点都有父指针，要求写一个函数，参数是A的一个子节点x，和B的根节点，要求返回B中对应x的那个节点。也就是说A的根节点未知。这题挺简单，所以我没怎么想就说了先找到A的根节点，然后同时对A和B做一个DFS或者BFS来找出B中对应x的节点。面试官说可以，让我写代码，写完以后分析了一下复杂度。然后就问有没有更好的方法，我马上就意识到不需要用DFS或者BFS ，只需要在找A的根节点时记录下当前路径就行了（只需记录每个子结点是父节点的第几个孩子），然后按同样的路径扫一下B树。复杂度只有O（height），面试官好像还很满意。这轮面试没有一下就想到最优解，所以我还比较担心会不会结果negative。

4. 上来又是先问了一些项目的问题，然后拿出电脑来让我看一段程序，找出里面的不 合理或者有错误的地方。我说了10分钟，每说一个错误他都记下来，最后他说可以了，已经写满一页了。然后出了一个编程题，要求用trie tree进行字符串匹配，字符串里 有可能有'?'，代表任意一个字符，trie的结构是面试官给的，也不需要构造tree，只需要使用就行了，所以还是比较简单的。写的时候有一个小错误，在测试时候发现了就改正了。总体感觉还不错，应该比第3轮答得好一些。

system desgin: 因为我是kernel背景，让我用mutex,cv实现一个semephor，说先考虑单核，然后拓展到多核，但我只写了单核的就没时间了，不知道多核的会有什么不同，要求code compilable，MD三哥从一进来就没好脸色，此轮negative

也是kernel组的三哥，先上来问了btree跟bst的区别，btree里放多少个index怎么决定，答案是disk block size / 每个index的长度，如果是内存的话就用cache line size除还有vm的，我也不大懂，好像是说如何解决内存的fagement问题，如何把多个分开的小片段移到一起，用到了madvise这个syscall,还问为什么返回一个新的page之前要清零，答案是因为page上可能是别的process的内容code题是decode，比如说1 → 1, 2 -- > 01, 3 → 001, 4 → 0001,....，给你一个无限的stream，要求输出数字，应该没啥难度，follow up是如何优化，我给的答案是map，就是依次取char而不是bit，然后把char的值对应到string上，他说cpu还有一个instruction可以直接查询此个char有多少个leading zero

1) 给你10g文件，1g内存，数总共有多少个不同的数，答案是用bit来记录数字，总共4b个interger,最多用0.5gb来记录，follow up是如果只有400m怎么办，答案是把数字hash一下或者说scan文件多次，每次取尾数bits不一样的数，不用code
2) read file up to 4K, 也是老题了
3) 求平方根，基本也是leetcode原题，但给的数是double，这样如果给的n是小于1的数，初始的right就得取1而不是n

题目就是设计一个tour的app，没给其他条件，需要自己clarify，中间用到了一个找最短路径的算法

Print the sum of all the numbers at every vertical level in a binary tree
Given a set of n jobs with [start time, end time, cost] find a subset so that no 2 jobs overlap and the cost is maximum?
excellent analysis from http://pages.cs.wisc.edu/~shuchi/courses/787-F09/scribe-notes/lec3.pdf. See also http://www.cs.rit.edu/~zjb/courses/800/lec8.pdf

Given 1 trillion messages and each message has at max 10 words, how do you build the index table and how many machines do you need on the cluster to store the index table?
How would you query for all the Places near a given coordinate? The focus is on how to scale this to a large number of places while keeping response time to within acceptable user expectations
Write a function that calculates input strings with operators +,-,*,/ eg. “5+5*6″ should output 35
Finding maximum subarray sum (similar to Kadane’s Algorithm) with the constraint that two numbers in the array that form the max sum cannot be next to each other
How do you use Facebook app and what are the problems with it? How would you fix it?
Write all solutions for a^3 + b^3 = c^3 + d^3, where a, b, c, d lie between [0, 10^5]
Write a function that takes 2 arguments: a binary tree and an integer n, it should return the n-th element in the inorder traversal of the binary tree.
Given 2 very large numbers, each of which is so large it can only be represented as an array of integers, write a function to multiply them.
Write a function to check if polygon is simple based on given list of points
Determine the 10 most frequent words given a terabyte of strings

design: messenger, location based service, Facebook travel app
designing a system to do spam detection work and describing it in a huge flowchart, as might be done in an early but detailed product planning session. Be prepared to think on large scales.
Design a system to support Facebook status update.
Design the recommendation system for search keywords


http://www.mitbbs.com/article_t1/JobHunting/32589551_0_1.html
http://se7so.blogspot.com/2014/01/how-to-prepare-for-interview-1.html (a serial of posts)
http://stackoverflow.com/questions/7086100/fast-computation-of-pairs-with-least-hamming-distance
http://en.wikipedia.org/wiki/Hamming_distance
http://se7so.blogspot.com/2014/02/how-to-prepare-for-interview-9.html (hamming distance)

resources:
http://www.mitbbs.com/article_t/JobHunting/32741713.html
http://blog.csdn.net/sigh1988/article/details/9790337
http://alfasin.com/tag/job-interview/
https://www.facebook.com/note.php?note_id=307069903919

http://www.mitbbs.com/clubarticle_t/New_Mommy_and_New_Daddy/20344137.html

http://www.glassdoor.com/Interview/Given-an-input-array-and-another-array-that-describes-a-new-index-for-each-element-mutate-the-input-array-so-that-each-ele-QTN_446534.htm
https://gist.github.com/mcsheffrey/6977999

http://www.careercup.com/question?id=5092486548553728
http://www.careercup.com/question?id=4909367207919616
http://www.careercup.com/question?id=6026101998485504

K palindrome
http://www.careercup.com/question?id=6287528252407808

http://stackoverflow.com/questions/14454133/write-all-solutions-for-a3-b3-c3-d3

如果表达式里有variable，比如有个x，要怎么做？
1 + b + 2 = b + 3
或者 （x ＋ 1）＊ 3 ＋ 2 *（2x + 5） 化简成7x + 13 

presto:
including joins, left/right outer joins, subqueries, and most of the common aggregate and scalar functions, including approximate distinct counts (using HyperLogLog) and approximate percentiles (based on quantile digest). The main restrictions at this stage are a size limitation on the join tables and cardinality of unique keys/groups. The system also lacks the ability to write output data back to tables (currently query results are streamed to the client).

http://www.mitbbs.com/article_t/JobHunting/32728009.html

4. 一个字符串,一个字符数组,求所有的子字符串,子字符串不能包括字符数组里面的所有元素.
abbc, [a,b,c] ->  a, b, c, ab, abb, bbc, bb, bc

5.多层链表压扁及还原
http://www.geeksforgeeks.org/flatten-a-linked-list-with-next-and-child-pointers/
http://codepad.org/yd52skUK

http://www.mitbbs.com/article_t/JobHunting/32554229.html
1) fabanacia，期待o(lgn)解法,但O(n)也行
2) generate all possible paretheses, leetcode原题，会让分析最优/平均时间，我只知道worse case 是O(n^2)


12/18/2014:
phone interview:
swap pairs in linked list (leetcode)
flat binary search tree so that the list is similar inorder traversal (use the right child pointer as next pointer)

onsite 1:
2sum, 3sum, remove comments from source code(//, /**/), needs to consider double quotes (content within double quotes remains, even comment)

onsite 2:
find K closet element in an array to a given target (heap)

onsite 3:
design a video player mobile app (needs to consider data format, tcp or udp, etc). Only design client side

onsite 4:
given an array of integers, each indicates how many letters the key (like the key on a mobile phone) at that index can denote. Also given another array which indicates the frequency of letters shown in a book. Design an algorithm to calculate the minimum number of key strokes if we want to enter the content of the book.

follow-up:
Now the letter in the result display must be the same as that in the frequency array. Eg, if 'a' comes before 'b' in the frequency array, then the same order must be kept in the result (we shouldn't have a scenario that key #1 displays 'bc', while key #2 displays 'ad').
